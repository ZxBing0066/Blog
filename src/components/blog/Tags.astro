---
// --- Props Definition ---
interface Props {
    // 标签数组或以逗号/空格分隔的字符串
    tags: string[] | string;
    // 是否为用于 Hero Image 的特殊样式
    isHeroTags?: boolean;
    // 允许传入额外的 class
    class?: string;
}

// --- Component Logic ---
const { tags, isHeroTags, class: className = '' } = Astro.props;

// 将传入的 tags 统一处理为数组格式
const tagsArray = Array.isArray(tags) ? tags : tags ? tags.split(/[\s,]+/) : [];

// 如果没有标签，则不渲染任何内容
if (!tagsArray.length) {
    return null;
}
---

<!-- 
    根元素会根据 isHeroTags prop 动态添加 'hero-tags' class，
    从而应用不同的样式。
-->
<div class={`tags ${isHeroTags ? 'hero-tags' : ''} ${className}`}>
    {
        tagsArray.map(tag => (
            <a class='tag' href={`/blog/tags/${tag.toLowerCase()}`}>
                {tag}
            </a>
        ))
    }
</div>

<style>
    /* --- 通用容器样式 --- */
    .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem; /* 稍微增大间距 */
        text-transform: uppercase;
    }

    .tag {
        /* 为所有 tag 统一设置基础样式和过渡效果 */
        display: inline-flex;
        border-radius: 0.25rem;
        text-decoration: none;
        font-size: 0.8rem;
        font-weight: 600;
        transition: all 0.3s ease-in-out;
        padding: 0.2rem 0.5rem;
    }

    /* --- 默认标签样式 (用于白色或浅色背景) --- */
    .tags:not(.hero-tags) .tag {
        /* color: var(--color-primary); */
        /* border: 1px solid var(--color-primary); */
        color: black;
        border: 1px solid black;
    }

    .tags:not(.hero-tags) .tag:hover {
        opacity: 0.8;
        color: var(--color-primary);
        border: 1px solid var(--color-primary);
    }

    .hero-tags .tag {
        padding: 0.3rem 0.8rem;
        border-radius: 9999px;
        /* 玻璃拟态效果 */
        background-color: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(10px) saturate(120%);

        color: white;
        border: 1px solid rgba(255, 255, 255, 0.3);

        /* 为白色文字添加细微的阴影，进一步提升在亮色背景下的可读性 */
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    }

    .hero-tags .tag:hover {
        /* 悬停时，标签轻微上浮并放大，提供更强的交互反馈 */
        transform: scale(1.05);
        background-color: rgba(255, 255, 255, 0.25);
        border-color: rgba(255, 255, 255, 0.5);
        /* 添加一个柔和的白色光晕效果，使其在悬停时更醒目 */
        box-shadow: 0 0 20px rgba(255, 255, 255, 0.2);
    }
</style>
